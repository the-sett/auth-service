/*
 * Holds a mapping from kinds of catalogue types to templates for generating
 * their Elm in the context of a component bean.
 */
componentBeanTypeMap ::= [
    "Component":"component_ref_type",
    "Entity":"component_ref_type",
    "Dimension":"component_ref_type",
    "View":"component_ref_type",
    "Fact":"component_ref_type",
    "Hierarchy":"hierarchy_type",
    "Enumeration":"enumeration_type",
    "Collection":"collection_type",
    "String":"string_type",
    "DateOnly":"date_only_type",
    "TimeOnly":"time_only_type",
    "Timestamp":"timestamp_type",
    "BigDecimal":"bigdecimal_type",
    default:"basic_type"
]

/* Holds a mapping from primitive types names to their Elm primitive type names. */
primitiveTypeMap ::= [
    "Boolean":"Bool",
    "Char":"Char",
    "Short":"Int",
    "Int":"Int",
    "Long":"Int",
    "Float":"Float",
    "Double":"Float",
    default:key
]

/* Holds a mapping from kinds of collections to their types in Elm. */
collectionTypeMap ::= [
    "Set":"List",
    "List":"List",
    "Bag":"Dict",
    "Map":"Dict"
]

component_ref_type(field) ::= <<
<field.name; format="ccu">
>>

hierarchy_type(field) ::= <<
<field.name; format="ccu">
>>

enumeration_type(field) ::= <<
<field.name; format="ccu">
>>

hierarchy_raw_type(field) ::= <<
String
>>

enumeration_raw_type(field) ::= <<
String
>>

date_or_range_type(field) ::= <<
<if(field.rangeType)>
<field.name; format="ccu">
<else>
String
<endif>
>>

time_or_range_type(field) ::= <<
<if(field.rangeType)>
<field.name; format="ccu">
<else>
String
<endif>
>>

date_only_type(field) ::= <<
String
>>

time_only_type(field) ::= <<
String
>>

timestamp_type(field) ::= <<
String
>>

collection_type(field) ::= <%
<if(field.map)>
<collectionTypeMap.(field.collectionKind)><if(field.elementType)><if(field.keyType)> <(typeMap.(field.keyType.kind))(field.keyType)>, <(typeMap.(field.elementType.kind))(field.elementType)><endif><endif>
<else>
<collectionTypeMap.(field.collectionKind)><if(field.elementType)> <(typeMap.(field.elementType.kind))(field.elementType)><endif>
<endif>
%>

string_type(field) ::= <<
String
>>

date_type(field) ::= <<
String
>>

bigdecimal_type(field) ::= <<
String
>>

basic_type(field) ::= <<
<primitiveTypeMap.(field.primitiveKind)>
>>

object_type(field) ::= <<
<objectTypeMap.(field.primitiveKind)>
>>
